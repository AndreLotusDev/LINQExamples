ElementAt - coding exercise 2
Using LINQ, implement the FormatPetDataAtIndex method, which takes a collection of pets and an index, and does the following:

if the index is valid and the pet at this index is not null, the result should be "Pet name: NAME" where NAME is the name of this pet

otherwise, the result should be "Pet data is missing for index INDEX" where INDEX is the index we tried to access

using System;
using System.Linq;
using System.Collections.Generic;

namespace Coding.Exercise
{
    public class Exercise
    {
        public static string FormatPetDataAtIndex(IEnumerable<Pet> pets, int index)
        {
            try {
                var indexPet = pets.ElementAt(index);
                
                return $"Pet name: {indexPet.Name}";
            } catch(Exception e) {
                return $"Pet data is missing for index {index}";
            }
        }
    }
    
    public class Pet
    {
        public string Name {get; set;}
    }
}
