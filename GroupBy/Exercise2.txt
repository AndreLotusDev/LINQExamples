GroupBy - coding exercise 2
Implement the FindTheHeaviestPetType method, which given a collection of Pets will return the PetType for which the average weight of a Pet is the largest.

For example, for the following input:

Pet name: Hannibal, Pet type: Fish, Pet weight: 1.1 kg

Pet name: Anthony, Pet type: Cat, Pet weight: 2 kg

Pet name: Ed, Pet type: Cat, Pet weight: 0.7 kg

Pet name: Taiga, Pet type: Dog, Pet weight: 35 kg

Pet name: Rex, Pet type: Dog, Pet weight: 40 kg

...the result shall be PetType.Dog, because the average weight of the dogs from this collection is 37.5 kg, which is more than for cats (1.35 kg) and fish (1.1kg).

For an empty input collection, the result shall be null.

using System;
using System.Linq;
using System.Collections.Generic;

namespace Coding.Exercise
{
    public class Exercise
    {
        public static PetType? FindTheHeaviestPetType(IEnumerable<Pet> pets)
        {
             if (pets == null || pets.Count() == 0)
            {
                return null;
            }
        
            return pets.GroupBy(p => p.PetType)
                .OrderByDescending(g => g.Sum(p => p.Weight))
                .First()
                .Key;
        }
    }
    
    public class Pet
    {
        public string Name { get; }
        public PetType PetType { get; }
        public float Weight { get; }
        
        public Pet(string name, PetType petType, float weight)
        {
            Name = name;
            PetType = petType;
            Weight = weight;
        }
        
        public override string ToString()
        {
            return $"Name: {Name}, Type: {PetType}, Weight: {Weight}";
        }
    }
    
    public enum PetType
    {
        Cat,
        Dog,
        Fish
    }
}
