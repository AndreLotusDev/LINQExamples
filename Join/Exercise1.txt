Join - coding exercise 1
Implement the GetHouseOwnersData method, which given a collection of people and a collection of houses will return a collection of strings with the information about house owners. The result should contain information about all people, even if they don't own any houses. If a person owns more than one house, it should be listed as many times in the result collection.

For example, for the following input:

People:

Id: 1, Name: John Smith

Id: 2, Name: Stephanie Green

Id: 3, Name: Martin Brown

Houses:

OwnerId: 2, Address: "White Cottage, 18 Miners Overlook"

OwnerId: 3, Address: "Hilltop Mansion, 234 Maple Road"

OwnerId: 3, Address: "Beach Farm, 10 Seaside Street"

The result shall be:

"Person: (Id:1), John Smith owns no house",

"Person: (Id:2), Stephanie Green owns White Cottage, 18 Miners Overlook",

"Person: (Id:3), Martin Brown owns Hilltop Mansion, 234 Maple Road",

"Person: (Id:3), Martin Brown owns Beach Farm, 10 Seaside Street"

Assume both input collections are non-empty.

using System;
using System.Linq;
using System.Collections.Generic;

namespace Coding.Exercise
{
    public class Exercise
    {
        public static IEnumerable<string> GetHouseOwnersData(
            IEnumerable<Person> people,
            IEnumerable<House> houses)
        {
           return from person in people
           join house in houses on person.Id equals house.OwnerId into personHouses
           from personHouse in personHouses.DefaultIfEmpty()
           select $"Person: {person} owns {GetHouseNameOrDefault(personHouse)}";
        }

        public static string GetHouseNameOrDefault(House house)
        {
            return house == null ? "no house" : house.Adderss;
        }
    }
    
    public class House
    {
        public int OwnerId { get; }
        public string Adderss { get; }

        public House(int ownerId, string adderss)
        {
            OwnerId = ownerId;
            Adderss = adderss;
        }
        
        public override string ToString()
        {
            return $"{Adderss}";
        }
    }
    public class Person 
    {
        public int Id { get;}
        public string Name {get;}

        public Person(int id, string name)
        {
            Id = id;
            Name = name;
        }

        public override string ToString()
        {
            return $"(Id:{Id}), {Name}";
        }
    }
}
