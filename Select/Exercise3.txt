Select - refactoring challenge
Refactor the TotalDurationOfSongs method.

Assume that the input string is formatted correctly and all its parts can be converted to TimeSpan safely.

using System;
using System.Linq;
using System.Collections.Generic;

namespace Coding.Exercise
{
    public class Exercise
    {
        //TODO implement this method
        public static TimeSpan TotalDurationOfSongs_Refactored(string allSongsDuration)
        {
            //TODO your code goes here
               if (string.IsNullOrEmpty(allSongsDuration))
            {
                return TimeSpan.Zero;
            }

            var durationStrings = allSongsDuration.Split(',')
                .Select(s => TimeSpan.ParseExact(s.Trim(), @"m\:ss", null));

            return durationStrings.Aggregate(TimeSpan.Zero, (acc, d) => acc + d);
        }
        
        //do not modify this method
        public static TimeSpan TotalDurationOfSongs(
            string allSongsDuration)
        {
            if(string.IsNullOrEmpty(allSongsDuration))
            {
                return new TimeSpan();
            }
            
            var durationStrings = allSongsDuration.Split(',');
            var totalDuration = 0d;
            foreach(var durationString in durationStrings)
            {
                var timeSpan = TimeSpan.ParseExact(
                    durationString, @"m\:ss", null);
                totalDuration += timeSpan.TotalSeconds;
            }

            return TimeSpan.FromSeconds(totalDuration);
        }
    }
}
